#lang racket

(define track
  '((detection-block ;; (name clockwise-in clockwise-out)
     (1-1 S-28 S-10 )
     (1-2 S-27 S-9  )
     (1-3 S-27 U-2  )
     (1-4 1-5  S-26 )
     (1-5 S-20 1-4  )
     (1-6 S-5  1-7  )
     (1-7 1-6  S-28 )
     (1-8 S-25 Nil  )
     (2-1 S-1  Nil  )
     (2-2 Nil  S-2-3)
     (2-3 S-12 S-5-6)
     (2-4 S-23 S-20 )
     (2-5 Nil  S-8  )
     (2-6 Nil  S-4  )
     (2-7 Nil  S-4  )
     (2-8 S-16 Nil  )
     )
    (segment ;; (name clockwise-in clockwise-out)
     (U-1 S-26  S-28)
     (U-2 1-3   S-24)
     (U-3 S-9   S-24)
     (U-4 S-12  S-23)
     (U-5 S-7   S-25)
     (U-6 S-2-3 S-1 )
     (U-7 Nil   S-16)
     )
    (switch ;; (name in out1 out2)
     (S-1  U-6   2-1  S-25 )
     (S-4  S-8   2-6  2-7  )
     (S-7  S-5-6 U-5  S-2-3)
     (S-8  S-2-3 2-5  S-4  )
     (S-9  1-2   U-3  S-11 )
     (S-10 S-11  1-1  S-16 )
     (S-11 S-12  S-9  S-10 )
     (S-12 S-11  U-4  2-3  )
     (S-16 U-7   S-10 2-8  )
     (S-20 2-4   1-5  S-5-6)
     (S-23 2-4   S-24 U-4  )
     (S-24 S-23  U-3  U-2  )
     (S-25 1-8   U-5  S-1  )
     (S-26 1-4   U-1  S-27 )
     (S-27 S-26  1-3  1-2  )
     (S-28 1-1   1-7  U-1  )
     )
    (switch*
     (S-2-3  U-6  S-7  S-3 )
     (S-3  S-2  2-2  S-8 )
     (S-5  S-6  1-6  S-7 )
     (S-6  S-5  2-3  S-20)
    (crossing
     (C-1)
     (C-2))
    (light
     (L-1)
     (L-2)
     )
    ))