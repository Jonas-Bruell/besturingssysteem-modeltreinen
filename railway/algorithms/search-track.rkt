#lang racket

(provide search-reachable-dblocks)

(define get-element-type car)
(define get-element-name cdr)

;; Logic for get-location
(define (search-reachable-dblocks railway current-dblock dblock-λ switch-λ segment-λ)
  (define reachable-dblocks-list '())
  (define (search-rec previous current)
    (cond ((eq? current 'NIL) (void))
          ((eq? (get-element-type current) 'dblock)
           (let* ((id (get-element-name current)))
             (dblock-λ id)
             (set! reachable-dblocks-list (append reachable-dblocks-list (list current)))))
          ((eq? (get-element-type current) 'switch)
           (let* ((id (get-element-name current))
                  (switch-prev (send railway get-switch-prev id))
                  (switch-next-left (send railway get-switch-next-left id))
                  (switch-next-right (send railway get-switch-next-right id)))
             (switch-λ id)
             (when (equal? switch-prev previous)
               (search-rec current switch-next-left)
               (search-rec current switch-next-right))
             (when (equal? switch-next-left previous) (search-rec current switch-prev))
             (when (equal? switch-next-right previous) (search-rec current switch-prev))))
          ((eq? (get-element-type current) 'segment)
           (let* ((id (get-element-name current))
                  (segment-prev (send railway get-segment-prev id))
                  (segment-next (send railway get-segment-next id)))
             (segment-λ id)
             (when (equal? segment-prev previous) (search-rec current segment-next))
             (when (equal? segment-next previous) (search-rec current segment-prev))))
          (else
           (error "RAILWAY > algoritms > search-reachable-dblocks > Doesn't exist : " current))))
  (search-rec (cons 'dblock current-dblock)
              (send railway get-detection-block-next current-dblock))
  (search-rec (cons 'dblock current-dblock)
              (send railway get-detection-block-prev current-dblock))
  reachable-dblocks-list)