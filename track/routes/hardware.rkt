#lang racket

(provide TRACK)

(define TRACK
  '((detection-block
    ;(name clockwise-in     clockwise-out   )
     (1-1  (switch  . S-28) (switch  . S-10))
     (1-2  (switch  . S-27) (switch  . S-9 ))
     (1-3  (switch  . S-27) (segment . U-2 ))
     (1-4  (dblock  . 1-5 ) (switch  . S-26))
     (1-5  (switch  . S-20) (dblock  . 1-4 ))
     (1-6  (switch  . S-5 ) (dblock  . 1-7 ))
     (1-7  (dblock  . 1-6 ) (switch  . S-28))
     (1-8  (switch  . S-25) NIL             )
     (2-1  (switch  . S-1 ) NIL             )
     (2-2  NIL              (switch  . S-3 ))
     (2-3  (switch  . S-12) (switch  . S-6 ))
     (2-4  (switch  . S-23) (switch  . S-20))
     (2-5  NIL              (switch  . S-8 ))
     (2-6  NIL              (switch  . S-4 ))
     (2-7  NIL              (switch  . S-4 ))
     (2-8  (switch  . S-16) NIL             )
     )
    (segment
    ;(name clockwise-in     clockwise-out   )
     (U-1  (switch  . S-26) (switch  . S-28))
     (U-2  (dblock  . 1-3 ) (switch  . S-24))
     (U-3  (switch  . S-9 ) (switch  . S-24))
     (U-4  (switch  . S-12) (switch  . S-23))
     (U-5  (switch  . S-7 ) (switch  . S-25))
     (U-6  (switch  . S-2 ) (switch  . S-1 ))
     (U-7  NIL              (switch  . S-16))
     )
    (switch
    ;(name in               out1             out2            )
     (S-1  (segment . U-6 ) (dblock  . 2-1 ) (switch  . S-25))
     (S-2  (segment . U-6 ) (switch  . S-7 ) (switch  . S-3 ))
     (S-3  (switch  . S-2 ) (dblock  . 2-2 ) (switch  . S-8 ))
     (S-4  (switch  . S-8 ) (dblock  . 2-6 ) (dblock  . 2-7 ))
     (S-5  (switch  . S-6 ) (dblock  . 1-6 ) (switch  . S-7 ))
     (S-6  (switch  . S-5 ) (dblock  . 2-3 ) (switch  . S-20))
     (S-7  (switch  . S-5 ) (segment . U-5 ) (switch  . S-2 ))
     (S-8  (switch  . S-3 ) (dblock  . 2-5 ) (switch  . S-4 ))
     (S-9  (dblock  . 1-2 ) (segment . U-3 ) (switch  . S-11))
     (S-10 (switch  . S-11) (dblock  . 1-1 ) (switch  . S-16))
     (S-11 (switch  . S-12) (switch  . S-9 ) (switch  . S-10))
     (S-12 (switch  . S-11) (segment . U-4 ) (dblock  . 2-3 ))
     (S-16 (segment . U-7 ) (switch  . S-10) (dblock  . 2-8 ))
     (S-20 (dblock  . 2-4 ) (dblock  . 1-5 ) (switch  . S-6 ))
     (S-23 (dblock  . 2-4 ) (switch  . S-24) (segment . U-4 ))
     (S-24 (switch  . S-23) (segment . U-3 ) (segment . U-2 ))
     (S-25 (dblock  . 1-8 ) (segment . U-5 ) (switch  . S-1 ))
     (S-26 (dblock  . 1-4 ) (segemnt . U-1 ) (switch  . S-27))
     (S-27 (switch  . S-26) (dblock  . 1-3 ) (dblock  . 1-2 ))
     (S-28 (dblock  . 1-1 ) (dblock  . 1-7 ) (segment . U-1 ))
     )
    (switch*
     (threeway
     ;(name  s1  s2  in              out1           out2           out3          )
      (S-2-3 S-2 S-3 (segment . U-6) (switch . S-7) (dblock . 2-2) (switch . S-8))
      )
     (cross
     ;(name  s1  s2  cl-in1         cl-in2          cl-out1        cl-out2       )
      (S-5-6 S-5 S-6 (switch . 2-3) (switch . S-20) (dblock . 1-6) (switch . S-7))
      )
     )
    (crossing
    ;(name (segment-list))
     (C-1  (1-3 1-2 1-1 U-7))
     (C-2  (1-6 1-5))
     )
    (light
    ;(name segment)
     (L-1  1-3)
     (L-2  1-5)
     )
    ))